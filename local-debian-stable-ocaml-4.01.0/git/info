             package: git
             version: 1.4.6
          repository: default
        upstream-url: https://github.com/mirage/ocaml-git/archive/1.4.6.tar.gz
       upstream-kind: http
   upstream-checksum: 6f5118a3a16d0cbb37728d80d806cae9
            homepage: https://github.com/mirage/ocaml-git
         bug-reports: https://github.com/mirage/ocaml-git/issues
            dev-repo: https://github.com/mirage/ocaml-git.git
              author: Thomas Gazagnaire
             license: ISC
             depends: mstruct >= 1.3.1 & dolog >= 1.0 & ocamlgraph & camlzip >= 1.05 & nocrypto >= 0.2.0 & uri >= 1.3.12 & lwt >= 2.4.7 & hex & cmdliner
             depopts: cohttp | conduit | mirage-types-lwt
   installed-version: 
  available-versions: 1.0.0, 1.0.1, 1.0.2, 1.1.0, 1.2.0, 1.3.0, 1.4.0, 1.4.1, 1.4.2, 1.4.3, 1.4.4, 1.4.5, 1.4.6
         description: Low-level Git bindings in pure OCaml

Support for on-disk and in-memory Git stores. Can read and write all
the Git objects: the usual blobs, trees, commits and tags but also the
pack files, pack indexes and the index file (where the staging area
lives).

All the objects share a consistent API, and convenience functions are
provided to manipulate the different objects. For instance, it is
possible to make a pack file position independant (as the Zlib
compression might change the relative offsets between the packed
objects), to generate pack indexes from pack files, or to expand
the filesystem of a given commit.

The library comes with a command-line tool called `ogit` which shares
a similar interface with `git`, but where all operations are mapped to
the API exposed `ocaml-git` (and hence using only OCaml code).

