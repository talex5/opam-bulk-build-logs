             package: sqlexpr
             version: 0.5.5
          repository: default
        upstream-url: https://forge.ocamlcore.org/frs/download.php/1203/ocaml-sqlexpr-0.5.5.tar.gz
       upstream-kind: http
   upstream-checksum: f0fb0e9caefd369736deed6d754ed71a
            homepage: http://github.com/mfp/ocaml-sqlexpr
              author: Mauricio Fernandez <mfp@acm.org>
             license: LGPL-2.1 with OCaml linking exception
             depends: batteries & (batteries = 1.5.0 | batteries = 1.4.3 | estring) & csv & lwt >= 2.2.0 & ocamlfind & (sqlite3 >= 2.0.4 | sqlite3 = 2.0.3)
   installed-version: 
  available-versions: 0.3.0, 0.5.5
         description: Type-safe, convenient SQLite database access.
Minimalistic library and syntax extension for type-safe, convenient
execution of SQL statements. Currently compatible with Sqlite3.

Sqlexpr features:

* automated prepared statement caching, param binding, data
extraction, error checking (including automatic stmt reset to avoid
BUSY/LOCKED errors in subsequent queries), stmt finalization on db
close, etc.

* HOFs like iter, fold, transaction

* support for different concurrency models: everything is functorized
over a THREAD monad, so you can for instance do concurrent folds/iters
with Lwt

* support for SQL stmt syntax checks and some extra semantic checking
(column names, etc)

