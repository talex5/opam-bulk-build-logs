+ uname -m
+ uname -s
+ lsb_release -i -s
/usr/bin/lsb_release
+ opam list --safe --recursive --external=x86_64,linux,ubuntu --required-by=ucaml
# Detecting depexts using flags: x86_64 linux ubuntu
+ opam list --safe --recursive --external=source,x86_64,linux,ubuntu --required-by=ucaml
# No extra OS packages requirements found.
The following actions will be performed:
  - install ucaml 0.1

=-=- Gathering sources =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[ucaml: from default] Command started
[ucaml: from default] Command started
[default] http://opam-archive:8080/archives/ucaml.0.1+opam.tar.gz downloaded

=-=- Processing actions -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[ucaml: make] Command started
+ make  (CWD=/home/opam/.opam/system/build/ucaml.0.1)
- ocamllex  lexer.mll
- 96 states, 4156 transitions, table size 17200 bytes
- ocamlyacc  parser.mly
- make[1]: Entering directory `/home/opam/.opam/system/build/ucaml.0.1'
- ocamldep parser.mli > ._bcdi/parser.di
- ocamldep c.mli > ._bcdi/c.di
- ocamldep closure.mli > ._bcdi/closure.di
- ocamldep assoc.mli > ._bcdi/assoc.di
- ocamldep alpha.mli > ._bcdi/alpha.di
- ocamldep kNormal.mli > ._bcdi/kNormal.di
- ocamldep wrap.mli > ._bcdi/wrap.di
- ocamldep typing.mli > ._bcdi/typing.di
- ocamldep type.mli > ._bcdi/type.di
- ocamldep parser.ml > ._d/parser.d
- ocamldep lexer.ml > ._d/lexer.d
- ocamldep main.ml > ._d/main.d
- ocamldep cFormat.ml > ._d/cFormat.d
- ocamldep optimize.ml > ._d/optimize.d
- ocamldep c.ml > ._d/c.d
- ocamldep cType.ml > ._d/cType.d
- ocamldep closure.ml > ._d/closure.d
- ocamldep assoc.ml > ._d/assoc.d
- ocamldep alpha.ml > ._d/alpha.d
- ocamldep kNormal.ml > ._d/kNormal.d
- ocamldep wrap.ml > ._d/wrap.d
- ocamldep typing.ml > ._d/typing.d
- ocamldep syntax.ml > ._d/syntax.d
- ocamldep env.ml > ._d/env.d
- ocamldep type.ml > ._d/type.d
- ocamldep s.ml > ._d/s.d
- ocamldep m.ml > ._d/m.d
- ocamldep id.ml > ._d/id.d
- ocamldep l.ml > ._d/l.d
- ocamldep d.ml > ._d/d.d
- make[1]: Leaving directory `/home/opam/.opam/system/build/ucaml.0.1'
- make[1]: Entering directory `/home/opam/.opam/system/build/ucaml.0.1'
- ocamlc -c -g d.ml
- ocamlc -c -g l.ml
- ocamlc -c -g id.ml
- ocamlc -c -g m.ml
- 169 shift/reduce conflicts.
- ocamlc -c -g s.ml
- ocamlc -c -g type.mli
- ocamlc -c -g type.ml
- ocamlc -c -g env.ml
- ocamlc -c -g syntax.ml
- ocamlc -c -g parser.mli
- ocamlc -c -g parser.ml
- ocamlc -c -g lexer.ml
- ocamlc -c -g typing.mli
- ocamlc -c -g typing.ml
- ocamlc -c -g wrap.mli
- ocamlc -c -g wrap.ml
- ocamlc -c -g kNormal.mli
- ocamlc -c -g kNormal.ml
- ocamlc -c -g alpha.mli
- ocamlc -c -g alpha.ml
- ocamlc -c -g assoc.mli
- ocamlc -c -g assoc.ml
- ocamlc -c -g closure.mli
- ocamlc -c -g closure.ml
- ocamlc -c -g cType.ml
- ocamlc -c -g c.mli
- ocamlc -c -g c.ml
- ocamlc -c -g optimize.ml
- ocamlc -c -g cFormat.ml
- ocamlc -c -g main.ml
- ocamlc \
- 				  \
- 				    -g        str.cma    -o ucaml \
- 				d.cmo l.cmo id.cmo m.cmo s.cmo type.cmo env.cmo syntax.cmo parser.cmo lexer.cmo typing.cmo wrap.cmo kNormal.cmo alpha.cmo assoc.cmo closure.cmo cType.cmo c.cmo optimize.cmo cFormat.cmo main.cmo
- make[1]: Leaving directory `/home/opam/.opam/system/build/ucaml.0.1'
- make -C lib
- make[1]: Entering directory `/home/opam/.opam/system/build/ucaml.0.1/lib'
- make -C src all
- make[2]: Entering directory `/home/opam/.opam/system/build/ucaml.0.1/lib/src'
- gcc -g -Wall -fPIC -I../include -c -o ucaml.o ucaml.c
- gcc -g -shared -fPIC -o libucaml.0.0.so ucaml.o
- ln -sf libucaml.0.so libucaml.so
- ln -sf libucaml.0.0.so libucaml.0.so
- make[2]: Leaving directory `/home/opam/.opam/system/build/ucaml.0.1/lib/src'
- make[1]: Leaving directory `/home/opam/.opam/system/build/ucaml.0.1/lib'
-> installed ucaml.0.1
Done.
