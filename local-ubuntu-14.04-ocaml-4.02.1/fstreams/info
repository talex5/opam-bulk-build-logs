             package: fstreams
             version: 0.2.1
          repository: default
        upstream-url: https://github.com/tel/ocaml-fstreams/archive/0.2.1.tar.gz
       upstream-kind: http
   upstream-checksum: 3564f973697f3ba032d39e02db56e8ba
            homepage: https://github.com/tel/ocaml-fstreams
         bug-reports: https://github.com/tel/ocaml-fstreams/issues
            dev-repo: https://github.com/tel/ocaml-fstreams.git
              author: Joseph Abrahamson <me@jspha.com>
             license: BSD3
             depends: ocamlfind
   installed-version: 
   available-version: 0.2.1
         description: Functional, lazy, infinite streams.

A very standard infinite data structure is the stream which lazily
determines its current and next values and even whether they exist or
not! This data structure is useful for describing computations which
are generated and consumed step-by-step and is a powerful basic tool
for many lazy algorithms.

Included in this module are two submodules, Infinite and
Finite. Infinite streams are streams which are guaranteed to always
have a next value and Finite streams are streams which may terminate
but are not obliged to.

Mathematically, Infinite streams are the greatest fixed point of the
functor F X = A * X and Finite streams are the greatest fixed point of
the functor F X = 1 + A * X.
